"""Add feed preferences table

Revision ID: 1d6f94e8cdf8
Revises: 2f7c6e18e182
Create Date: 2025-07-27 16:06:52.058279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1d6f94e8cdf8'
down_revision: Union[str, Sequence[str], None] = '2f7c6e18e182'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('friend_requests')
    op.drop_table('follows')
    op.drop_table('friends')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('friends',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('friend_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], name=op.f('friends_friend_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('friends_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('friends_pkey')),
    sa.UniqueConstraint('user_id', 'friend_id', name=op.f('friends_user_id_friend_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('follows',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('follower_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('following_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name=op.f('follows_follower_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['following_id'], ['users.id'], name=op.f('follows_following_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('follows_pkey')),
    sa.UniqueConstraint('follower_id', 'following_id', name=op.f('follows_follower_id_following_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('friend_requests',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('from_user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('to_user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], name=op.f('friend_requests_from_user_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], name=op.f('friend_requests_to_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('friend_requests_pkey')),
    sa.UniqueConstraint('from_user_id', 'to_user_id', name=op.f('friend_requests_from_user_id_to_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
